---
   - name: Deploy slave configuration
     become: true
     template: >
       src=slave.cnf.j2
       dest=/etc/my.cnf.d/server.cnf
     notify: restart mysql

   #- name: Printing
   #  become: true
   #  debug: msg="{{mysql_replication_user.name}}"

   - name: MasterIp is...
     become: true
     debug: msg="{{hostvars[groups['hivedb'][0]]['mysql_replication_master']}}"

   - name: Check slave replication status.
     become: true   
     mysql_replication:
       mode: getslave 
       #login_user: root 
       login_password: "{{ mariadb_root_password }}"
     ignore_errors: true
     register: slave

   - name: Check master replication status.
     become: true    
     mysql_replication: mode=getmaster login_password="{{ mariadb_root_password }}" #login_user=root login_password="{{ mariadb_root_password }}"
     delegate_to: "{{hostvars[groups['hivedb'][0]]['mysql_replication_master']}}"
     register: master

   - name: Stop Slave before configuration.
     become: true    
     mysql_replication: mode=stopslave login_password="{{ mariadb_root_password }}" #login_user=root login_password="{{ mariadb_root_password }}"

   - name: Configure replication on the slave.
     become: true    
     mysql_replication:
       #login_user: root
       login_password: "{{ mariadb_root_password }}"
       mode: changemaster
       master_host: "{{hostvars[groups['hivedb'][0]]['mysql_replication_master']}}"
       master_user: "{{ mysql_replication_user.name }}"
       master_password: "{{ mysql_replication_user.password }}"
       master_log_file: "{{ master.File }}"
       master_log_pos: "{{ master.Position }}"
     ignore_errors: True

   - name: Start Slave and Replication.
     become: true    
     mysql_replication: mode=startslave login_password="{{ mariadb_root_password }}" #login_user=root login_password="{{ mariadb_root_password }}"
